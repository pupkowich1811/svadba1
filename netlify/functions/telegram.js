// netlify/functions/telegram.js

const BOT_TOKEN = '8288274911:AAGuEGWP0j0gf6z2S9DogLlZtjUin9q2x0g'; // ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
const CHAT_ID = '5266091692';     // ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π Telegram ID

exports.handler = async (event) => {
  if (event.httpMethod !== 'POST') {
    return { statusCode: 405, body: 'Method Not Allowed' };
  }

  try {
    const data = JSON.parse(event.body);
    const { name, attendance } = data;

    let statusText = '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    if (attendance === 'yes') statusText = '–î–∞, —Å —Ä–∞–¥–æ—Å—Ç—å—é!';
    if (attendance === 'no') statusText = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —Å–º–æ–≥—É';

    const message = `üíç –ù–æ–≤–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è!\n\n–ò–º—è: ${name}\n–û—Ç–≤–µ—Ç: ${statusText}`;
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;

    const response = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ chat_id: CHAT_ID, text: message, parse_mode: 'HTML' })
    });

    if (response.ok) {
      return { statusCode: 200, body: 'OK' };
    } else {
      console.error('–û—à–∏–±–∫–∞ Telegram API:', await response.text());
      return { statusCode: 500, body: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏' };
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:', error);
    return { statusCode: 500, body: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' };
  }
};